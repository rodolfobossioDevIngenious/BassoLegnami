const n=new function(){const e=this;return this.listeners={},this.registerListener=function(t,n,r){const s=t.constructor.name;r=this.validateNumber(r||"any"),"Array"!==s&&(t=[t]),t.forEach((function(t){if("String"!==t.constructor.name)throw new Error("Only `String` and array of `String` are accepted for the event names!");e.listeners[t]=e.listeners[t]||[],e.listeners[t].push({callback:n,number:r})}))},this.validateNumber=function(e){const t=e.constructor.name;if("Number"===t)return e;if("String"===t&&"any"===e.toLowerCase())return"any";throw new Error("Only `Number` and `any` are accepted in the number of possible executions!")},this.toBeRemoved=function(e){const t=e.number;return e.execution=e.execution||0,e.execution++,!("any"===t||e.execution<t)},{on(t,n){e.registerListener.bind(e)(t,n,"any")},once(t,n){e.registerListener.bind(e)(t,n,1)},exactly(t,n,r){e.registerListener.bind(e)(n,r,t)},die(t){delete e.listeners[t]},off(e){this.die(e)},detach(t,n){if(void 0===n)return e.listeners[t]=[],!0;for(var r in e.listeners[t])if(e.listeners[t].hasOwnProperty(r)&&e.listeners[t][r].callback===n)return e.listeners[t].splice(r,1),this.detach(t,n);return!0},detachAll(){for(const t in e.listeners)e.listeners.hasOwnProperty(t)&&this.detach(t)},async emit(t,n){const r=[];for(const n in e.listeners)if(e.listeners.hasOwnProperty(n)&&(n===t&&Array.prototype.push.apply(r,e.listeners[n]),n.indexOf("*")>=0)){let s=n.replace(/\*\*/,"([^.]+.?)+");s=s.replace(/\*/g,"[^.]+");const i=t.match(s);i&&t===i[0]&&Array.prototype.push.apply(r,e.listeners[n])}const s=arguments;n=n||this;let i=0;for(const o of r){let r=o.callback;n&&(r=r.bind(n));const c=[];Object.keys(s).map((function(e){e>1&&c.push(s[e])})),e.toBeRemoved(o)&&e.listeners[t].splice(i,1);const a=r.apply(null,c);a&&await a,i++}}}};export{n as e};