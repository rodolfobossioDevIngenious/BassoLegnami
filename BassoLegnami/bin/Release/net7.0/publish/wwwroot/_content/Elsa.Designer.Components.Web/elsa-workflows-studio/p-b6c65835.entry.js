import{r as e,h as t,H as s}from"./p-ee0b9025.js";import{c as r}from"./p-a3b5bd35.js";import{a as o,S as a}from"./p-c74b54ba.js";import{a as i}from"./p-ccd51ea4.js";import"./p-971980b1.js";import"./p-82db2ff5.js";import"./p-949334ec.js";import{a as l}from"./p-e77aabd2.js";import{W as n}from"./p-79414d9f.js";import{T as p}from"./p-821a7518.js";import"./p-80de33dc.js";import"./p-e0c1fede.js";import"./p-f1ec68ec.js";import"./p-93cac3a6.js";import"./p-d88cb309.js";import"./p-83f217d4.js";let d=class{constructor(t){e(this,t)}async getServerUrl(){return this.serverUrl}async workflowDefinitionIdChangedHandler(e){const t=e;let r={id:null,version:1,activities:[],connections:[],persistenceBehavior:o.WorkflowBurst,customAttributes:{data:{}},persistWorkflow:!1,isLatest:!1,isPublished:!1,loadWorkflowContext:!1,isSingleton:!1,saveWorkflowContext:!1,variables:{data:{}},type:null,inputProperties:{data:{}},outputProperties:{data:{}},propertyStorageProviders:{}};const s=await i(this.serverUrl);if(t&&t.length>0)try{r=await s.workflowRegistryApi.get(t,{isLatest:!0})}catch(e){console.warn("The specified workflow blueprint does not exist. Creating a new one.")}this.updateModels(r)}async serverUrlChangedHandler(e){e&&e.length>0&&await this.loadActivityDescriptors()}async componentWillLoad(){await this.serverUrlChangedHandler(this.serverUrl),await this.workflowDefinitionIdChangedHandler(this.workflowDefinitionId)}componentDidLoad(){this.designer||(this.designer=this.el.querySelector(l.useX6Graphs?"x6-designer":"elsa-designer-tree"),this.designer.model=this.workflowModel)}async loadActivityDescriptors(){const e=await i(this.serverUrl);l.activityDescriptors=await e.activitiesApi.list()}updateModels(e){this.workflowBlueprint=e,this.workflowModel=this.mapWorkflowModel(e)}mapWorkflowModel(e){return{activities:e.activities.filter((t=>t.parentId==e.id||!t.parentId)).map(this.mapActivityModel),connections:e.connections.map(this.mapConnectionModel),persistenceBehavior:e.persistenceBehavior}}mapActivityModel(e){const t=l.activityDescriptors.find((t=>t.type==e.type)),s=r.map(e.inputProperties.data,((e,r)=>{const s=t.inputProperties.find((e=>e.name==r)),o=(null==s?void 0:s.defaultSyntax)||a.Literal,i={};return i[o]=e,{name:r,expressions:i,syntax:o}}));return{activityId:e.id,description:e.description,displayName:e.displayName||e.name||e.type,name:e.name,type:e.type,x:e.x,y:e.y,properties:s,outcomes:[...t.outcomes],persistWorkflow:e.persistWorkflow,saveWorkflowContext:e.saveWorkflowContext,loadWorkflowContext:e.loadWorkflowContext,propertyStorageProviders:e.propertyStorageProviders}}mapConnectionModel(e){return{sourceId:e.sourceActivityId,targetId:e.targetActivityId,outcome:e.outcome}}render(){return t(s,{class:"elsa-flex elsa-flex-col elsa-w-full elsa-relative",ref:e=>this.el=e},this.renderCanvas())}renderCanvas(){return t("div",{class:"elsa-flex-1 elsa-flex"},!l.useX6Graphs&&t("elsa-designer-tree",{model:this.workflowModel,class:"elsa-flex-1",ref:e=>this.designer=e,mode:n.Blueprint}),l.useX6Graphs&&t("x6-designer",{model:this.workflowModel,class:"elsa-workflow-wrapper",ref:e=>this.designer=e,mode:n.Blueprint}),t("elsa-flyout-panel",null,t("elsa-tab-header",{tab:"general",slot:"header"},"General"),t("elsa-tab-content",{tab:"general",slot:"content"},t("elsa-workflow-blueprint-properties-panel",{workflowId:this.workflowDefinitionId}))))}static get watchers(){return{workflowDefinitionId:["workflowDefinitionIdChangedHandler"],serverUrl:["serverUrlChangedHandler"]}}};p.injectProps(d,["serverUrl","culture"]);export{d as elsa_workflow_blueprint_viewer_screen};