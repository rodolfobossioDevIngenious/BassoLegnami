@inherits Microsoft.VisualStudio.Web.CodeGeneration.Templating.RazorTemplateBase
@using Microsoft.VisualStudio.Web.CodeGeneration.EntityFrameworkCore
@using System.Collections.Generic
@using System.Linq
@@model @Model.ViewDataTypeName
@@using Microsoft.AspNetCore.Mvc.Localization
@@inject IHtmlLocalizer<SharedResource> SR

@{
    if (Model.IsPartialView)
    {
    }
    else if (Model.IsLayoutPageSelected)
    {
@:@@{
    @:ViewData["Title"] = string.Format("{0} {1}", SR["Delete"].Value, Html.DisplayNameFor(model => model.@GetPrimaryKeyName()).ToString());
        if (!string.IsNullOrEmpty(Model.LayoutPageFile))
        {
    @:Layout = "@Model.LayoutPageFile";
        }
@:}
@:
    }
    else
    {
@:@@{
    @:Layout = null;
@:}
@:
@:<!DOCTYPE html>
@:
@:<html>
@:<head>
    @:<meta name="viewport" content="width=device-width" />
    @:<title>@Model.ViewName</title>
@:</head>
@:<body>
@:
        //    PushIndent("    ");
    }
}

<div class="row">
    <div class="col-md-3"></div>
    <div class="col-md-6">
        <div class="card stacked-form">
            <div class="card-header">
                <h4 class="card-title title">@@ViewData["Title"]</h4>
            </div>
            <div class="card-body">
                <form asp-action="Delete">
                    <hr />
                    @foreach (var property in Model.ModelMetadata.Properties)
                    {
                        if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey && (property.PropertyName != "CreatedBy" && property.PropertyName != "CreatedOn" && property.PropertyName != "UpdatedBy" && property.PropertyName != "UpdatedOn" && property.PropertyName != "RowVersion"))
                        {
                    @:<div class="form-group">
                        @:<label asp-for="@GetValueExpression(property)" class="control-label"></label>
                        @:<display asp-for="@GetValueExpression(property)" class="form-control"></display>
                    @:</div>
                        }
                    }
                    @foreach (var navigation in Model.ModelMetadata.Navigations)
                    {
                    @:<div class="form-group">
                        @:<label asp-for="@GetValueExpression(navigation)" class="control-label"></label>
                        @:<display asp-for="@GetValueExpression(navigation).@navigation.DisplayPropertyName" class="form-control"></display>
                    @:</div>
                    }
<hr />
                    <div class="text-right">
                        @foreach (var property in Model.ModelMetadata.Properties)
                        {
                            if(property.IsPrimaryKey){
                        @:<input type="hidden" asp-for="@GetValueExpression(property)" />
                            }
                        }
                        <button type="submit" value="Delete" class="btn btn-danger"><i class="fa fa-trash"></i> @@SR["Delete"]</button>
                        <a asp-action="Index" class="btn btn-default"><i class="fa fa-chevron-left"></i> @@SR["BackToList"]</a>
                    </div>
                </form>
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>
</div>
    @if (!Model.IsPartialView && !Model.IsLayoutPageSelected)
    {
        //ClearIndent();
@:</body>
@:</html>
    }
@functions
{
    string GetPrimaryKeyName()
    {
        return (Model.ModelMetadata.PrimaryKeys != null && Model.ModelMetadata.PrimaryKeys.Length == 1)
        ? Model.ModelMetadata.PrimaryKeys[0].PropertyName
        : null;
    }

    string GetValueExpression(IPropertyMetadata property)
    {
        return property.PropertyName;
    }

    string GetValueExpression(INavigationMetadata navigation)
    {
        return navigation.AssociationPropertyName;
    }
}