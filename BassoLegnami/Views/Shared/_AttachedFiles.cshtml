@model BassoLegnami.Model.Models.AttachedFiles
@using Microsoft.AspNetCore.Mvc.Localization
@inject IHtmlLocalizer<SharedResource> SR
@inject BassoLegnami.Model.Data.IUnitOfWork unitOfWork;
@inject UserManager<In.Core.Models.ApplicationUser> userManager;

@{
    string insertModalName = $"newFileModal{Model.FileFolderKey}{Model.ReferenceID}";
}

<div class="attachedFilesForm" data_fileFolderKey="@Model.FileFolderKey" data_referenceID="@Model.ReferenceID">
    <div class="modal fade" id="@insertModalName" tabindex="-1" role="dialog" aria-labelledby="newFileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLabel">@SR["AddNew"] @Model.ReferenceID</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <span class="btn btn-primary btn-outline btn-file">
                        <i class="fa fa-search"></i> @SR["Browse"] <input type="file" id="uploadedFile" name="uploadedFile" class="btn-file" />
                    </span>
                    @SR["SelectFile"]
                </div>
                <div class="modal-footer">
                    <button id="ConfirmFileUpload" type="button" class="btn btn-primary confirmFileUpload"><i class="fa fa-plus"></i> @SR["Confirm"]</button>
                    <button id="CloseFileUpload" type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fa fa-close"></i> @SR["Close"]</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fade" id="deleteFileModal" tabindex="-1" role="dialog" aria-labelledby="deleteFileModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header danger">
                    <h5 class="modal-title" id="exampleModalLabel">@SR["Delete"]</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="fileID" name="fileID" />
                    <h5>@SR["DeleteConfirm"]</h5>
                </div>
                <div class="modal-footer">
                    <button id="ConfirmFileDelete" type="button" class="btn btn-danger"><i class="fa fa-trash"></i> @SR["Delete"]</button>
                    <button id="CloseFileDelete" type="button" class="btn btn-secondary" data-dismiss="modal"><i class="fa fa-close"></i> @SR["Close"]</button>
                </div>
            </div>
        </div>
    </div>

    <table id="files" class="table table-striped table-bordered table-hover excluded files" cellspacing="0" width="100%" style="width:100%">
        <thead>
            <tr>
                <th style="width:15%;">@Html.LabelFor(model => model.Files.FirstOrDefault().Name)</th>
                <th style="width:15%;" class="text-right">@SR["CreatedOn"]</th>
                <th style="width:15%;" class="text-right">@SR["CreatedBy"]</th>
                <th style="width:15%;" class="text-right">@SR["UpdatedOn"]</th>
                <th style="width:15%;" class="text-right">@SR["UpdatedBy"]</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Files)
            {
                <tr data-fileID="@item.FileID">
                    <td>@Html.DisplayFor(modelItem => item.Name)</td>
                    <td class="text-right">@Html.DisplayFor(modelItem => item.CreatedOn)</td>
                    <td class="text-right">@userManager.FindByIdAsync(item.CreatedBy)?.Result.UserName</td>
                    <td class="text-right">@Html.DisplayFor(modelItem => item.UpdatedOn)</td>
                    <td class="text-right">@userManager.FindByIdAsync(item.UpdatedBy)?.Result.UserName</td>
                    <td class="col-md-2 col-sm-3 text-right">
                        @if (unitOfWork.AuthorizationsRepository.IsAuthorized("AttachedFiles", "Details"))
                        {
                            <a class="btn btn-default downloadFile" data-fileID="@item.FileID" href="@Url.Action("Details", "AttachedFiles", new { id = item.FileID, area = string.Empty })"><i class="fa fa-download"></i></a>
                        }
                        @if (unitOfWork.AuthorizationsRepository.IsAuthorized("AttachedFiles", "Delete"))
                        {
                            <a class="btn btn-danger deleteFile" data-fileID="@item.FileID" href="#"><i class="fa fa-trash"></i></a>
                        }
                    </td>
                </tr>
            }
        </tbody>
        <tfoot>
            @if (unitOfWork.AuthorizationsRepository.IsAuthorized("AttachedFiles", "Insert"))
            {
                <tr>
                    <th colspan="6">
                        <button type="button" class="btn btn-primary rowButton" data-toggle="modal" data-target="#@insertModalName"><i class="fa fa-plus"></i> @SR["CreateNew"]</button>
                    </th>
                </tr>
            }
        </tfoot>
    </table>
</div>

<script type="text/javascript">
    function runWhenReady() {
        if (window.$) {
            $(".confirmFileUpload").off("click").on("click", function () {
                debugger;
                var parent = $(this).parents(".attachedFilesForm:first");
                formData = new FormData()
                if (parent.find('#uploadedFile')[0].files.length > 0) {
                    formData.append("file", parent.find('#uploadedFile')[0].files[0]);
                }
                formData.append("fileFolderKey", parent.attr("data_fileFolderKey"));
                formData.append("referenceID", parent.attr("data_referenceID"));
                debugger;
                $.ajax({
                    url: '@Url.Action("Insert", "AttachedFiles", new { Area = string.Empty })',
                    type: 'POST',
                    contentType: false,
                    processData: false,
                    data: formData,
                    cache: false,
                    beforeSend: function () {
                        $(".loading").removeClass("hidden");
                    },
                    success: function (data) {
                        if (data.result == true) {
                            var newRow = '<tr data-fileID="' + data.fileID + '"><td>' + data.fileName + '</td><td class="text-right">' + data.createdOn + '</td><td class="text-right">' + data.createdBy + '</td><td class="text-right">' + data.updatedOn + '</td><td class="text-right">' + data.updatedBy + '</td>';
                            newRow += '<td class="col-md-2 col-sm-3 text-right">';
                            newRow += '<a class="btn btn-default downloadFile" data-fileID="' + data.fileID + '" href="/AttachedFiles/Details?id=' + data.fileID + '"><i class="fa fa-download"></i></a>&nbsp;';
                            newRow += '<a class="btn btn-danger deleteFile" data-fileID="' + data.fileID + '" href="#"><i class="fa fa-trash"></i></a>';
                            newRow += '</td></tr>';

                            parent.find('#files').append(newRow);
                        }
                        else {
                            alert("Impossibile eseguire l'upload del file. Estensione non consentita.")
                        }
                        $("div[aria-labelledby='newFileModalLabel']").modal("hide");
                    },
                    error: function (request, status, error) {
                        console.log(request);
                        console.log(status);
                        console.log(error);
                        alert(request.responseText);
                    },
                    complete: function () {
                        $(".loading").addClass("hidden");
                    }
                });
            });

            $(".files").off("click").on("click", ".deleteFile", function () {
                $("#deleteFileModal #fileID").val($(this).attr("data-fileID"));
                $("#deleteFileModal").modal("show");
            });

            $("#ConfirmFileDelete").off("click").on("click", function () {
                $.ajax({
                    url: '@Url.Action("Delete", "AttachedFiles", new { Area = string.Empty })',
                    type: 'POST',
                    data: { fileID: $("#deleteFileModal #fileID").val() },
                    cache: false,
                    beforeSend: function () {
                        $(".loading").removeClass("hidden");
                        $("#deleteFileModal").modal("hide");
                    },
                    success: function (data) {
                        $("#files tbody tr[data-fileID='" + $("#deleteFileModal #fileID").val() + "']").remove();
                    },
                    error: function (request, status, error) {
                        console.log(request);
                        console.log(status);
                        console.log(error);
                        alert(request.responseText);
                    },
                    complete: function () {
                        $(".loading").addClass("hidden");
                    }
                });
            });
        }
        else {
            setTimeout(runWhenReady, 100);
        }
    }
    runWhenReady();
</script>